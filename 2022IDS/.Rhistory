main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,0)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,2)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,0)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(0.25,0)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,0)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,0.25)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,-0.25)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.25,-0.2)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.2,-0.2)))
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.2,-0.2)))
# 2
survey <- c(T, F, T, T, F, T, F, F, F, F)
colors()
sum(survey == T)
sum(survey == F)
barplot(c(sum(survey == T), sum(survey == F)),
col = c('red', 'yellow'),
names = c('Yes', 'No'))
# 3
data(mtcars)
barplot(table(mtcars$cyl),
col = c('red', 'yellow', 'blue'),
horiz = TRUE,
ylab = '실린더의 수',
main = '실린더 종류별 분포')
# 4
ds = hist(sleep$extra,
main = 'Histogram of sleep',
xlab = 'Increase in hours of sleep',
breaks = 4)
# 5
ds <- table(mtcars$cyl, mtcars$gear) # 행 = cyl, 열 = gear
color <- c('tomato', 'salmon', 'peachpuff')
barplot(ds,
beside = TRUE,
col = color,
main = 'Distribution of carburetors',
xlab = 'Number of gear',
ylab = 'Frequency',
legend.text = c('cyl 4', 'cyl 6', 'cyl 8'),
args.legend = list(x='topright', bty = 'n', inset =c(-0.25, 0)))
# 6
ds <- trees$Height
color.6 <- rep('#f1faee', 6)
color.6[3:5] <- '#e63946'
hist(ds,
breaks = 6,
col = color.6,
main = 'Histogram of Black Cherry Trees',
xlab = 'Height(ft)')
# 7
par(mfrow = c(2, 3), mar = c(5,4,4,3))
par(mfrow = c(1, 1), mar = c(5,4,4,2)+.1)
# 8
male <- c(6.9, 30.4, 80.4)
female <- c(4.9, 38.2, 82.7)
ds <- rbind(male, female)
colnames(ds) <- c('samsung', 'apple', 'huawei')
barplot(ds,
beside = TRUE,
horiz = TRUE,
col = c('#ffe66d', '#00afb9'),
main = '성별에 따른 브랜드 선호도',
legend.text = c('여자', '남자'),
args.legend = list(x='right', bty = 'n', inset =c(-0.25,0)),
las = 1)
# 9
holyday <- c(14, 15, 15, 16, 14, 11, 12)
holyday.actual <- c(15, 35, 38, 36, 34, 32, 32)
ds <- rbind(holyday, holyday.actual)
colnames(ds) <- c('한국', '일본', '독일', '러시아', '미국', '프랑스', '호주')
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.2,-0.2)))
# 2
survey <- c(T, F, T, T, F, T, F, F, F, F)
colors()
sum(survey == T)
sum(survey == F)
barplot(c(sum(survey == T), sum(survey == F)),
col = c('red', 'yellow'),
names = c('Yes', 'No'))
# 3
data(mtcars)
barplot(table(mtcars$cyl),
col = c('red', 'yellow', 'blue'),
horiz = TRUE,
ylab = '실린더의 수',
main = '실린더 종류별 분포')
# 4
ds = hist(sleep$extra,
main = 'Histogram of sleep',
xlab = 'Increase in hours of sleep',
breaks = 4)
# 5
ds <- table(mtcars$cyl, mtcars$gear) # 행 = cyl, 열 = gear
color <- c('tomato', 'salmon', 'peachpuff')
barplot(ds,
beside = TRUE,
col = color,
main = 'Distribution of carburetors',
xlab = 'Number of gear',
ylab = 'Frequency',
legend.text = c('cyl 4', 'cyl 6', 'cyl 8'),
args.legend = list(x='topright', bty = 'n', inset =c(-0.25, 0)))
# 6
ds <- trees$Height
color.6 <- rep('#f1faee', 6)
color.6[3:5] <- '#e63946'
hist(ds,
breaks = 6,
col = color.6,
main = 'Histogram of Black Cherry Trees',
xlab = 'Height(ft)')
# 7
par(mfrow = c(2, 3), mar = c(5,4,4,3))
par(mfrow = c(1, 1), mar = c(5,4,4,2)+.1)
# 8
male <- c(6.9, 30.4, 80.4)
female <- c(4.9, 38.2, 82.7)
ds <- rbind(male, female)
colnames(ds) <- c('samsung', 'apple', 'huawei')
barplot(ds,
beside = TRUE,
horiz = TRUE,
col = c('#ffe66d', '#00afb9'),
main = '성별에 따른 브랜드 선호도',
legend.text = c('여자', '남자'),
args.legend = list(x='right', bty = 'n', inset =c(-0.25,0)),
las = 1)
# 9
holyday <- c(14, 15, 15, 16, 14, 11, 12)
holyday.actual <- c(15, 35, 38, 36, 34, 32, 32)
ds <- rbind(holyday, holyday.actual)
colnames(ds) <- c('한국', '일본', '독일', '러시아', '미국', '프랑스', '호주')
barplot(ds,
beside = TRUE,
col = c('grey', 'skyblue'),
main = '주요 국가별 공휴일 현황',
xlab = '국가',
legend.text = c('공휴일 수', '실제 쉬는 날'),
args.legend = list(x='topleft', bty = 'n', inset =c(-0.2,-0.2)))
4
plot(0:10, 0:10, xlab="", ylab="", xaxt="n", yaxt="n", type="n")
rect(6, 6, 9, 9)
corners <- function(){
# locator(1)은 마우스로 찍 점 하나의 위치
coos <- c(unlist(locator(1)), unlist(locator(1)))
rect(coos[1], coos[2], coos[3], coos[4])
}
corners()
plot(0:10, 0:10, xlab="", ylab="", xaxt="n", yaxt="n", type="n")
rect(6, 6, 9, 9)
corners <- function(){
# locator(1)은 마우스로 찍 점 하나의 위치
coos <- c(unlist(locator(1)), unlist(locator(1)))
rect(coos[1], coos[2], coos[3], coos[4])
}
corners()
plot(0:10, 0:10, xlab="", ylab="", xaxt="n", yaxt="n", type="n")
rect(6, 6, 9, 9)
corners <- function(){
# locator(1)은 마우스로 찍 점 하나의 위치
coos <- c(unlist(locator(1)), unlist(locator(1)))
rect(coos[1], coos[2], coos[3], coos[4])
}
corners()
data(cars)
dist = cars[, 2]
boxplot(dist, main = '제동거리')
boxplot.stats(dist)
data(iris)
levels(iris$Species)
data(iris)
levels(iris$Species)
boxplot(Petal.Length ~ Species,
data = iris,
col = rainbow(3))
View(mtcars)
data(mtcars)
boxplot(mtcars$mpg)
boxplot(mtcars$mpg ~ mtcars$gear)
boxplot(mtcars$mpg ~ mtcars$vs)
boxplot(mtcars$mpg ~ mtcars$am)
grp <- rep('high', nrow(mtcars))
grp[mtcars$wt < mean(mtcars$wt)] <- 'low'
boxplot(mtcars$hp ~ grp)
par(mfrow = c(2,2))
barplot(table(tips$sex), main = 'gender')
barplot(table(tips$day), main = 'Day of the week')
barplot(table(tips$time), main = 'time')
barplot(table(tips$size), main = 'size')
par(mfrow = c(1,1))
class(mtcars)
par(mfrow = c(2,2))
boxplot(mtcars$mpg)
boxplot(mtcars$mpg ~ mtcars$gear)
boxplot(mtcars$mpg ~ mtcars$vs)
boxplot(mtcars$mpg ~ mtcars$am)
grp <- rep('high', nrow(mtcars))
grp[mtcars$wt < mean(mtcars$wt)] <- 'low'
boxplot(mtcars$hp ~ grp)
par(mfrow = c(1,1))
par(mfrow = c(2,2))
boxplot(mtcars$mpg)
boxplot(mtcars$mpg ~ mtcars$gear)
boxplot(mtcars$mpg ~ mtcars$vs)
boxplot(mtcars$mpg ~ mtcars$am)
x``
grp <- rep('high', nrow(mtcars))
grp[mtcars$wt < mean(mtcars$wt)] <- 'low'
boxplot(mtcars$hp ~ grp)
par(mfrow = c(1,1))
par(mfrow = c(2,2))
boxplot(mtcars$mpg)
boxplot(mtcars$mpg ~ mtcars$gear)
boxplot(mtcars$mpg ~ mtcars$vs)
boxplot(mtcars$mpg ~ mtcars$am)
#grp <- rep('high', nrow(mtcars))
#grp[mtcars$wt < mean(mtcars$wt)] <- 'low'
#boxplot(mtcars$hp ~ grp)
par(mfrow = c(1,1))
wt = mtcars$wt
mpg = mtcars$mpg
plot(wt, mpg)
plot(wt, mpg,
col = 'red',
pch = 11)
plot(mtcars$mpg ~ mtcars$wt,
col = 'red',
pch = 11)
plot(mtcars[, c('mpg', 'disp', 'drat', 'wt')])
library(dplyr)
install.packages('carData')
library(carData)
# 데이터 준비
room_class <- TitanicSurvival$passengerClass
room_class
# 도수분포 계산
tbl <- table(room_class)
tbl
factor(tbl)
factor(room_class)
barplot(factor(room_class))
barplot(tbl)
sum(tbl)
# 막대그래프 작성
barplot(tbl, main = '선실별 탑승객',
xlab = '선실 등급',
ylab = '탑승객 수',
col = c('blue', 'green', 'yellow'))
# 원그래프 작성
tbl/sum(tbl)
par(mar = c(1,1,4,1))
pie(tbl, main = '선실별 탑승객',
col = c('blue', 'green', 'yellow'))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# 원그래프 작성
tbl/sum(tbl)
par(mar = c(1,1,4,1))
pie(tbl, main = '선실별 탑승객',
col = c('blue', 'green', 'yellow'))
par(mar = c(5.1, 4.1, 4.1, 2.1))
# 단일변수 수치형 데이터 분석
grad <- state.x77[, 'HS Grad']
Grad
grad
## 사분위수
summary(grad)
var(grad) # 분산
sd(grad) # 표준편차
sd(grad) ** 2  == var(grad)
all.equal(sd(grad) ** 2 ,var(grad))
## 히스토그램
hist(grad, main = '주별 졸업률',
xlab = '졸업률',
ylab = '주의 개수',
col = 'orange')
## 상자그림
boxplot(grad, main = '주별 졸업률',
col = 'orange')
## 졸업률이 가장 낮은 주
idx <- which(grad == min(grad))
grad[idx]
## 졸업률이 가장 높은 주
idx <- which(grad == max(grad))
grad[idx]
## 졸업률이 평균 이하인 주
idx <- which(grad <= mean(grad))
grad[idx]
setwd("C:/Users/woo/Desktop/Project/class/2022IDS")
getwd()
read.csv('data/fdeaths.csv')
read.csv('data/fdeaths.csv', row.names = 'year')
read.csv('data/fdeaths.csv', row.names = 'year')
ds <- read.csv('data/fdeaths.csv', row.names = 'year')
ds
colors()
my_col <- c('black', 'blue','red', 'green','purple','dark gray')
my_lty <- 1:6
ds
ds[1]
plot(1:12,
ds[1,],
main = '월별 사망자 추이',
type 'b',
lty = my_lty[1],
xlab = 'Month',
ylab = '사망자수',
ylim = c(300, 1200),
col = my_col[1])
plot(1:12,
ds[1,],
main = '월별 사망자 추이',
type = 'b',
lty = my_lty[1],
xlab = 'Month',
ylab = '사망자수',
ylim = c(300, 1200),
col = my_col[1])
rownames(ds)
legend(x='topright',
lty = my_lty,
col = my_col,
legend = rownames(ds))
legend(x='topright',
lty = my_lty,
col = my_col,
legend = rownames(ds))
plot(1:12,
ds[1,],
main = '월별 사망자 추이',
type = 'b',
lty = my_lty[1],
xlab = 'Month',
ylab = '사망자수',
ylim = c(300, 1200),
col = my_col[1])
for (i in 2:6){
lines(1:12, # x data
ds[i,],
type = 'b',
lty = my_ity[i],
col = my_col[i]
)
}
for (i in 2:6){
lines(1:12, # x data
ds[i,],
type = 'b',
lty = my_lty[i],
col = my_col[i]
)
}
legend(x='topright',
lty = my_lty,
col = my_col,
legend = rownames(ds))
plot(1:12,
ds[1,],
main = '월별 사망자 추이',
type = 'b',
lty = my_lty[1],
xlab = 'Month',
ylab = '사망자수',
ylim = c(300, 1200),
col = my_col[1])
for (i in 2:6){
lines(1:12, # x data
ds[i,],
type = 'b',
lty = my_lty[i],
col = my_col[i]
)
}
legend(x='topright',
lty = my_lty,
col = my_col,
legend = rownames(ds))
legend(x='botomleft',
lty = my_lty,
col = my_col,
legend = rownames(ds))
legend(x='bottomleft',
lty = my_lty,
col = my_col,
legend = rownames(ds))
plot(1:12,
ds[1,],
main = '월별 사망자 추이',
type = 'b',
lty = my_lty[1],
xlab = 'Month',
ylab = '사망자수',
ylim = c(300, 1200),
col = my_col[1])
for (i in 2:6){
lines(1:12, # x data
ds[i,],
type = 'b',
lty = my_lty[i],
col = my_col[i]
)
}
legend(x='topright',
lty = my_lty,
col = my_col,
legend = rownames(ds))
library(DAAG)
install.packages('DAGG')
library(DAAG)
install.packages('DAAG')
library(DAAG)
data(carprice)
force(carprice)
View(carprice)
str(carprice)
str(carprice)$Type
str(carprice)['Type']
str(carprice)[1]
str(carprice)
?carprice
?carprice
str(carprice)
str(carprice)[2]
str(carprice)[,2]
str(carprice)
carprice
class(carprice)
range(class)
range(carprice)
range(carprice$Price)
hist(carprice$Price)
table(carprice$Type)
class(carprice$Type)
levels(carprice$Type)
carprice$Type
barplot(carprice$Type)
barplot(carprice$Type ~ 1:6)
barplot(table(carprice))
barplot(table(carprice$Type))
barplot(table(carprice$Type),
col = my_col)
barplot(table(carprice$Type),
col = my_col)
barplot(table(carprice$Type),
col = rainbow(length(table(carprice$Type))))
idx <- which(carprice$Price == max(carprice$Price))
idx
carprice[idx]
carprice[idx, c('Type', 'Price')]
